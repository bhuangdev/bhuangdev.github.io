(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{529:function(n,e,t){"use strict";t.r(e);var a=t(70),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"sql-server总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-server总结"}},[n._v("#")]),n._v(" Sql Server总结")]),n._v(" "),t("h2",{attrs:{id:"sql-server证书加密解密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-server证书加密解密"}},[n._v("#")]),n._v(" sql server证书加密解密")]),n._v(" "),t("ol",[t("li")]),n._v(" "),t("p",[n._v("use dbname;\n--创建master key\nCREATE MASTER KEY ENCRYPTION BY PASSWORD ='password';\n2.\nuse dbname;\n--创建证书\nCREATE CERTIFICATE 证书名字\nwith SUBJECT = 'Certificate'\nGO\n3.\nuse dbname;\n--由证书加密对称密钥\nCREATE SYMMETRIC KEY 密钥名字\nWITH ALGORITHM = AES_256\nENCRYPTION BY CERTIFICATE 证书名字;\nGO\n4.\nuse dbname;\n--打开对称密钥\nOPEN SYMMETRIC KEY 密钥名字 DECRYPTION BY CERTIFICATE 证书名字;")]),n._v(" "),t("p",[n._v("参考博客：https://www.cnblogs.com/wolfocme110/p/4016035.html")]),n._v(" "),t("h2",{attrs:{id:"sql行转列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql行转列"}},[n._v("#")]),n._v(" sql行转列")]),n._v(" "),t("p",[n._v("max(case when xx then xx else xx end) as 新列名")]),n._v(" "),t("h2",{attrs:{id:"ef转为sql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ef转为sql"}},[n._v("#")]),n._v(" EF转为sql")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('IDictionary<int, int> IInvoice.GetInvoiceIdsByUserId(Guid userId)\n{\n    using (var context = new eFileForBusiness_DEVEntities())\n    {\n        ((IObjectContextAdapter)context).ObjectContext.CommandTimeout = DBUtils.CommandTimeout;\n\n        context.Database.Log = x => logger.Trace(x.Replace(Environment.NewLine, string.Empty));\n\n        var InvoiceIds = context.UserForms\n            .Where(x => x.UserId.Equals(userId) && (x.FormStatus.Equals("B") || x.FormStatus.Equals("T")))\n            .GroupBy(x => x.InvoiceId)\n            .Select(x => x.FirstOrDefault()).ToList().Where(x => x.InvoiceId > 0)\n            .Select(x => { return new { id = x.InvoiceId ?? 0 }; })\n            .OrderByDescending(i => i.id);\n\n        return InvoiceIds.ToDictionary(x => x.id, x => x.id);\n    }\n}\n\nIDictionary<int, int> IInvoice.GetInvoiceIdsByUserId(Guid userId)\n{\n    using (var context = new eFileForBusiness_DEVEntities())\n    {\n        ((IObjectContextAdapter)context).ObjectContext.CommandTimeout = DBUtils.CommandTimeout;\n        context.Database.Log = x => logger.Trace(x.Replace(Environment.NewLine, string.Empty));\n    }\n\n    DataTable dt = new DataTable();\n    SqlDataReader InvoiceIds = null;\n    var paramSet = new SqlParameter[1];\n    paramSet[0] = new SqlParameter("@UserId", userId);\n    using (InvoiceIds = DBUtils.ExecuteReader(this.DBConnString, CommandType.Text, "select distinct invoiceid from invoice where userId = @UserId", paramSet))\n    {\n        if (InvoiceIds != null)\n        {\n            dt.Load(InvoiceIds);\n        }\n    }\n\n    return dt.Rows.Cast<DataRow>().ToDictionary(x => Convert.ToInt32(x[0].ToString()), x => Convert.ToInt32(x[0].ToString()));\n}\n')])])]),t("h2",{attrs:{id:"sql实现多选查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql实现多选查询"}},[n._v("#")]),n._v(" Sql实现多选查询")]),n._v(" "),t("p",[n._v("场景：报表，筛选条件，根据studentname来查询学生所上课程信息，要求可多选学生，可全选，可单选")]),n._v(" "),t("p",[n._v("查询信息的存储过程（）：")]),n._v(" "),t("p",[n._v("IF Object_id('tempdb..#StudentName') IS NOT NULL\nDROP TABLE #StudentName\nSelect * INTO #StudentName FROM dbo.Split(@StudentName,',')\n//新建临时表，每次执行时判断若不为空则删除表，再建\n临时表  内容from function")]),n._v(" "),t("p",[n._v("select Uname,max(case when Cname = '烦人的T-SQL' then joinornot else 0 end) as '烦人的T-SQL',\nmax(case when Cname = 'Android & iOS 与 Asp.net的那点事儿' then joinornot else 0 end) as 'Android & iOS 与 Asp.net的那点事儿',\nmax(case when Cname = '使用Autofac实现控制反转和依赖注入' then joinornot else 0 end) as '使用Autofac实现控制反转和依赖注入',\nmax(case when Cname = '手机测试基础' then joinornot else 0 end) as '手机测试基础',\nmax(case when Cname = '微信小程序开发入门' then joinornot else 0 end) as '微信小程序开发入门',\nmax(case when Cname = '深入浅出机器学习-神经网络' then joinornot else 0 end) as '深入浅出机器学习-神经网络',\nmax(case when Cname = '前端的响应式编程基础' then joinornot else 0 end) as '前端的响应式编程基础',\nmax(case when Cname = 'CSS3新特性介绍' then joinornot else 0 end) as 'CSS3新特性介绍',\nmax(case when Cname = 'AR for Android – Tango Introduction' then joinornot else 0 end) as 'AR for Android – Tango Introduction',\nmax(case when Cname = 'ES6 语法的深入讲解' then joinornot else 0 end) as 'ES6 语法的深入讲解',\nmax(case when Cname = 'C#.NET中级技术培训' then joinornot else 0 end) as 'C#.NET中级技术培训',\nmax(case when Cname = '使用Vue开发简单的SPA' then joinornot else 0 end) as '使用Vue开发简单的SPA',\nmax(case when Cname = 'T-SQL存储过程最佳实践' then joinornot else 0 end) as 'T-SQL存储过程最佳实践',\nmax(case when Cname = 'Vue 中级' then joinornot else 0 end) as 'Vue 中级',\nmax(case when Cname = '自动化测试入门' then joinornot else 0 end) as '自动化测试入门',\nmax(case when Cname = 'C#.NET基础' then joinornot else 0 end) as 'C#.NET基础',\nmax(case when Cname = 'PMP考试介绍及经验分享' then joinornot else 0 end) as 'PMP考试介绍及经验分享',\nmax(case when Cname = 'Kanban - Introduction' then joinornot else 0 end) as 'Kanban - Introduction',\nmax(case when Cname = '自动化测试之页面元素定位' then joinornot else 0 end) as '自动化测试之页面元素定位',\nmax(case when Cname = 'Test Case Design' then joinornot else 0 end) as 'Test Case Design',\nmax(case when Cname = 'Solution Best Practices' then joinornot else 0 end) as 'Solution Best Practices',\nmax(case when Cname = 'EF Core' then joinornot else 0 end) as 'EF Core',\nmax(case when Cname = '1' then joinornot else 0 end) as '1',\nmax(case when Cname = 'asad' then joinornot else 0 end) as 'asad',\nmax(case when Cname = '数据库新时代  - 拥抱开源' then joinornot else 0 end) as '数据库新时代  - 拥抱开源',\nmax(case when Cname = '数据库新时代 - 拥抱开源' then joinornot else 0 end) as '数据库新时代 - 拥抱开源',\nmax(case when Cname = '数据库新时代 拥抱开源' then joinornot else 0 end) as '数据库新时代 拥抱开源',\nmax(case when Cname = '数据库新时代拥抱开源' then joinornot else 0 end) as '数据库新时代拥抱开源',\nmax(case when Cname = 'NL – India Culture' then joinornot else 0 end) as 'NL – India Culture',\nmax(case when Cname = 'DEVOPS 入门 （持续集成，持续部署实践） ' then joinornot else 0 end) as 'DEVOPS 入门 （持续集成，持续部署实践） ',\nmax(case when Cname = '可复制的领导力' then joinornot else 0 end) as '可复制的领导力',\nmax(case when Cname = 'MES基础培训' then joinornot else 0 end) as 'MES基础培训',count(Uname) Rowtotal\nfrom ShowAllStuCourse ssc")]),n._v(" "),t("p",[n._v("where Uname in (SELECT * FROM #StudentName)")]),n._v(" "),t("p",[n._v("and ssc.CourseStartDate >= @FromDate\nand ssc.CourseStartDate < dateadd(day,1,@ToDate)\ngroup by Uname\nhaving count(Uname) >=1")]),n._v(" "),t("p",[n._v("END")]),n._v(" "),t("p",[n._v("CREATE FUNCTION [dbo].[Split]   //函数名称（@参数名 参数的数据类型）\n(")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("@String nvarchar(max), \n\n@Delimiter VARCHAR(5) \n")])])]),t("p",[n._v(")")]),n._v(" "),t("p",[n._v("RETURNS  @SplittedValues TABLE  //返回返回值的数据类型       //table 存储结果集，供稍后处理\n(")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("SplitValue VARCHAR(200) \n")])])]),t("p",[n._v(")")]),n._v(" "),t("p",[n._v("AS\nBEGIN    //函数体")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("DECLARE @SplitLength INT \n\nWHILE LEN(@String) > 0     //LEN()函数返回文本字段中值得长度\n\nBEGIN\n\n\tSELECT @SplitLength = (\n\t\n\t\tCASE CHARINDEX(@Delimiter,@String)    //返回@Delimiter在@String中的起始位置，默认从第一位开始\n\t\t\n\t\tWHEN 0              //单选\n\t\t\n\t\tTHEN   LEN(@String)   \n\t\t\n\t\tELSE CHARINDEX(@Delimiter,@String) -1 \n\t\t\n\t\tEND\n\t\n\t) \n\t\n\tINSERT INTO @SplittedValues \n\t\n\tSELECT SUBSTRING(@String,1,@SplitLength)     //截取字符串@String，从第1位开始，截取@SplitLength长\n\t\n\tSELECT @String = (\n\t\n\t\tCASE (LEN(@String) - @SplitLength) \n\t\t\n\t\tWHEN 0 \n\t\t\n\t\tTHEN   '' \n\t\t\n\t\tELSE  RIGHT(@String, LEN(@String) - @SplitLength - 1)     //RIGHT函数，返回字符串从右边开始指定个数的字符\n\t\t\n\t\tEND\n\t) \n\nEND\n\nRETURN\n")])])]),t("p",[n._v("END")])])}),[],!1,null,null,null);e.default=s.exports}}]);