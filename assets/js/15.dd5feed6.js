(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{528:function(e,t,n){"use strict";n.r(t);var a=n(70),l=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"历史前端框架笔记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#历史前端框架笔记"}},[e._v("#")]),e._v(" 历史前端框架笔记")]),e._v(" "),n("h2",{attrs:{id:"动态切换组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态切换组件"}},[e._v("#")]),e._v(" 动态切换组件")]),e._v(" "),n("p",[e._v("https://blog.csdn.net/liangmengbk/article/details/85013547")]),e._v(" "),n("h2",{attrs:{id:"vue页面组件化-父子组件传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue页面组件化-父子组件传值"}},[e._v("#")]),e._v(" vue页面组件化-父子组件传值")]),e._v(" "),n("blockquote",[n("p",[e._v("页面组件化涉及到父子组件传值的问题，需要用到props和emit")])]),e._v(" "),n("ul",[n("li",[e._v("父组件引")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(' <Dialog\n \t:dialogVisible="visible"   //需要向子组件传值的属性\n \t:title="title"\n\t:width="width"\n \t@changeVisible="changeV"   //子组件向父组件传值及操作的途径方法\n />\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('import Dialog from "@/newsModules/noticeDialog";\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("components: {\n\tDialog\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('data里\nvisible：false,\ntitle:"",\nwidth:""\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("changeV(e) {\n\tthis.visible = e;    //e是从子组件传过来的值\n\tthis.getNoticeData(); //子组件传值的同时调用父组件的初始化方法来刷新父组件的值\n}\n")])])]),n("ul",[n("li",[e._v("子组件定义")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("balabala(组件代码)\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('props: {    //用props定义需要从父组件接收值的变量\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ""\n    },\n    width: {\n      type: String,\n      default: ""\n    }\n}\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('handleClose() {\n\tthis.$emit("changeVisible", false);  //把false作为值传给changeVisible方法\n}\n')])])]),n("h2",{attrs:{id:"table组件-写columns-属性时render自定义内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table组件-写columns-属性时render自定义内容"}},[e._v("#")]),e._v(" table组件 写columns 属性时render自定义内容")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('prop: "action",\nlabel: this.$t("noticePage.OPERATE"),\nalign: "center",\ntableWidth: 260,\nrender: (createElement, params) => {\n    return createElement("div", [\n        createElement(\n            "td-button",\n            {\n                style: "min-width:25px !important",\n                attrs: {\n                \ttype: "text"\n                },\n\n                on: {\n                    click: _ => {\n                    \tthis.openDialog(params.row);\n                    }\n                }\n            },\n            "编辑"\n        )\n    ]);\n    }\n}\n')])])]),n("h2",{attrs:{id:"日期组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#日期组件"}},[e._v("#")]),e._v(" 日期组件")]),e._v(" "),n("ul",[n("li",[e._v("日期限制")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("pickerBeginDateBefore: {\n    disabledDate: time => {\n        let beginDateVal = new Date(this.ruleForm.patrolEndTime).getTime();\n        if (beginDateVal) {\n        \treturn time.getTime() > beginDateVal;   //开始日期小于结束日期\n        }\n    }\n},\npickerBeginDateAfter: {\n    disabledDate: time => {\n        let beginDateVal = new Date(this.ruleForm.patrolStartTime).getTime();\n        if (beginDateVal) {\n            return (                //结束日期大于开始日期且小于开始日期加7天\n                time.getTime() < beginDateVal - 24 * 60 * 60 * 1000 ||\n                time.getTime() > beginDateVal + 30 * 24 * 60 * 60 * 1000\n            );\n        }\n    }\n}\n")])])]),n("h2",{attrs:{id:"drags"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#drags"}},[e._v("#")]),e._v(" drags")]),e._v(" "),n("p",[e._v("https://blog.csdn.net/weixin_41910848/article/details/82218243")]),e._v(" "),n("h2",{attrs:{id:"添加和更新调同一个组件时的判断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加和更新调同一个组件时的判断"}},[e._v("#")]),e._v(" 添加和更新调同一个组件时的判断")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('if (this.title == "添加") {\n    this.addItems();\n    this.$nextTick(() => {\n    \tthis.dialogClose();\n    });\n} else {\n    this.editItems();\n    this.$nextTick(() => {\n    \tthis.dialogClose();\n    });\n}\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('dialogClose() {\n    this.$emit("changeVisible", false);  //关闭\n    this.$emit("changeData");\t\t\t //刷新\n}\n')])])]),n("h2",{attrs:{id:"el-date-picker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#el-date-picker"}},[e._v("#")]),e._v(" el-date-picker")]),e._v(" "),n("p",[e._v("initDefaultDate() {")]),e._v(" "),n("p",[e._v('var s1 = moment(new Date()).format("YYYY-MM-DD 08:00:00");')]),e._v(" "),n("p",[e._v('var s2 = moment(new Date()).format("YYYY-MM-DD 17:00:00");')]),e._v(" "),n("p",[e._v("this.leaveForm.leaveDate = [s1, s2];")]),e._v(" "),n("p",[e._v("this.leaveForm.totalHour = 8;")]),e._v(" "),n("p",[e._v("}")]),e._v(" "),n("p",[e._v("changeDate() {")]),e._v(" "),n("p",[e._v("var from = moment(new Date(this.leaveForm.leaveDate[0])).format(")]),e._v(" "),n("p",[e._v("​    this.leaveForm.leaveDate[0].getMinutes() >= 30")]),e._v(" "),n("p",[e._v('​     ? "YYYY-MM-DD HH:30:00"')]),e._v(" "),n("p",[e._v('​     : "YYYY-MM-DD HH:00:00"')]),e._v(" "),n("p",[e._v(");")]),e._v(" "),n("p",[e._v("var to = moment(new Date(this.leaveForm.leaveDate[1])).format(")]),e._v(" "),n("p",[e._v("​    this.leaveForm.leaveDate[1].getMinutes() >= 30")]),e._v(" "),n("p",[e._v('​     ? "YYYY-MM-DD HH:30:00"')]),e._v(" "),n("p",[e._v('​     : "YYYY-MM-DD HH:00:00"')]),e._v(" "),n("p",[e._v(");")]),e._v(" "),n("p",[e._v("this.leaveForm.leaveDate = [from, to];")]),e._v(" "),n("p",[e._v('var fromDate = from.toString().split(" ")[0];')]),e._v(" "),n("p",[e._v('var toDate = to.toString().split(" ")[0];')]),e._v(" "),n("p",[e._v('var fromDateArr = fromDate.split("-");')]),e._v(" "),n("p",[e._v('var toDateArr = toDate.split("-");')]),e._v(" "),n("p",[e._v("var totalDays = Math.abs(")]),e._v(" "),n("p",[e._v("​    (new Date(")]),e._v(" "),n("p",[e._v('​     fromDateArr[1] + "-" + fromDateArr[2] + "-" + fromDateArr[0]')]),e._v(" "),n("p",[e._v("​    ) -")]),e._v(" "),n("p",[e._v('​     new Date(toDateArr[1] + "-" + toDateArr[2] + "-" + toDateArr[0])) /')]),e._v(" "),n("p",[e._v("​     1000 /")]),e._v(" "),n("p",[e._v("​     60 /")]),e._v(" "),n("p",[e._v("​     60 /")]),e._v(" "),n("p",[e._v("​     24")]),e._v(" "),n("p",[e._v(");")]),e._v(" "),n("p",[e._v("var totalDaysfloor = Math.floor(totalDays);")]),e._v(" "),n("p",[e._v("var totalHour = 0;")]),e._v(" "),n("p",[e._v("if (0 !== totalDays) {")]),e._v(" "),n("p",[e._v("​    totalHour = totalDaysfloor * 8;")]),e._v(" "),n("p",[e._v('​    var additionalHour = to.toString().split(" ")[1].split("😊[0];')]),e._v(" "),n("p",[e._v("​    totalHour += additionalHour > 8 ? additionalHour - 8 : 0;")]),e._v(" "),n("p",[e._v("} else {")]),e._v(" "),n("p",[e._v('​    var fromTime = from.toString().split(" ")[1];')]),e._v(" "),n("p",[e._v('​    var toTime = to.toString().split(" ")[1];')]),e._v(" "),n("p",[e._v('​    totalHour = Math.abs(toTime.split("😊[0] - fromTime.split("😊[0]);')]),e._v(" "),n("p",[e._v("}")]),e._v(" "),n("p",[e._v("this.leaveForm.totalHour = totalHour;")]),e._v(" "),n("p",[e._v("},")]),e._v(" "),n("h2",{attrs:{id:"el-table分页"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#el-table分页"}},[e._v("#")]),e._v(" el-table分页")]),e._v(" "),n("blockquote",[n("p",[e._v("注意：total一定要赋值")])]),e._v(" "),n("ol",[n("li",[e._v("el-table属性")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(':data="tableData.slice((currentPage-1)*pagesize,currentPage*pagesize)"\n')])])]),n("ol",{attrs:{start:"2"}},[n("li",[e._v("分页代码")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<div style="text-align: center;margin-top: 30px;">\n\t<el-pagination\n\t\tbackground\n\t\tlayout="prev, pager, next"\n\t\t:total="total"\n\t\t@current-change="current_change"\n\t></el-pagination>\n</div\n')])])]),n("ol",{attrs:{start:"3"}},[n("li",[e._v("data中定义")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("total: 0,\npagesize: 10,\ncurrentPage: 1\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[e._v("methods中定义")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("current_change: function (currentPage) {\n\tthis.currentPage = currentPage;\n}\n")])])]),n("h2",{attrs:{id:"el-table-行内加form-rule验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#el-table-行内加form-rule验证"}},[e._v("#")]),e._v(" el-table 行内加form rule验证")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<el-table-column :label="SCORE" align="center">\n              <template slot-scope="scope">\n                <el-form :model="scope.row" :rules="scoreRules" ref="scoreRef" z-index="999">\n                  <el-form-item prop="aScore">\n                    <td-input\n                      v-model="scope.row.aScore"\n                      id="scoreInput"\n                      style="width:100px !important;"\n                    ></td-input>\n                  </el-form-item>\n                </el-form>\n              </template>\n            </el-table-column>\n')])])]),n("h2",{attrs:{id:"foreach-filter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#foreach-filter"}},[e._v("#")]),e._v(" forEach filter")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('schedulingListTemp.forEach((element) => {\n                    var patrolUserIdTemp = element.patrolUserId;\n                    var item = response.data.content.filter(\n                      (t) => t.id == patrolUserIdTemp\n                    );\n                    if (item.length != 0) {\n                      var temp = {};\n                      temp.patrolPName = item[0].name;\n                      temp.patrolPNameShow =\n                        item[0].name + "(" + item[0].personNo + ")";\n                      temp.patrolPeopleOrganizetion = item[0].deptName;\n                      temp.patrolRouteText = element.patrolRouteText;\n                      temp.patrolBeginTime = element.patrolBeginTime;\n                      temp.patrolEndTime = element.patrolEndTime;\n                      temp.patrolUserId = element.patrolUserId;\n                      temp.patrolLineId = element.patrolLineId;\n                      _this.schedulingList.push(temp);\n                    } else {\n                      var temp2 = {};\n                      temp2.patrolPName = "";\n                      temp2.patrolPNameShow = "";\n                      temp2.patrolPeopleOrganizetion = "";\n                      temp2.patrolRouteText = element.patrolRouteText;\n                      temp2.patrolBeginTime = element.patrolBeginTime;\n                      temp2.patrolEndTime = element.patrolEndTime;\n                      temp2.patrolUserId = element.patrolUserId;\n                      temp2.patrolLineId = element.patrolLineId;\n                      _this.schedulingList.push(temp2);\n                    }\n                  });\n')])])]),n("h2",{attrs:{id:"富文本编辑器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#富文本编辑器"}},[e._v("#")]),e._v(" 富文本编辑器")]),e._v(" "),n("ul",[n("li",[e._v("用")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<Editor v-model="noticeContent" />\n')])])]),n("ul",[n("li",[e._v("引")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Editor from '@/components/Editor';\ncomponents: {\n\tEditor\n}\nnoticeContent:\"\"\n")])])]),n("ul",[n("li",[e._v("源")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<template>\n  <div>\n    \x3c!-- 图片上传组件辅助 --\x3e\n    <el-upload\n      class="avatar-uploader quill-img"\n      :action="uploadImgUrl"\n      name="file"\n      :headers="headers"\n      :show-file-list="false"\n      :on-success="quillImgSuccess"\n      :on-error="uploadError"\n      :before-upload="quillImgBefore"\n      accept=".jpg, .jpeg, .png, .gif"\n    ></el-upload>\n\n    \x3c!-- 富文本组件 --\x3e\n    <quill-editor\n      class="editor"\n      v-model="content"\n      ref="quillEditor"\n      :options="editorOption"\n      @blur="onEditorBlur($event)"\n      @focus="onEditorFocus($event)"\n      @change="onEditorChange($event)"\n    ></quill-editor>\n  </div>\n</template>\n\n<script>\nimport { getToken } from "@/utils/auth";\n\n// 工具栏配置\nconst toolbarOptions = [\n  ["bold", "italic", "underline", "strike"], // 加粗 斜体 下划线 删除线\n  ["blockquote", "code-block"], // 引用  代码块\n  [{ list: "ordered" }, { list: "bullet" }], // 有序、无序列表\n  [{ indent: "-1" }, { indent: "+1" }], // 缩进\n  [{ size: ["small", false, "large", "huge"] }], // 字体大小\n  [{ header: [1, 2, 3, 4, 5, 6, false] }], // 标题\n  [{ color: [] }, { background: [] }], // 字体颜色、字体背景颜色\n  [{ align: [] }], // 对齐方式\n  ["clean"], // 清除文本格式\n  ["link", "image", "video"], // 链接、图片、视频\n];\n\nimport { quillEditor } from "vue-quill-editor";\nimport "quill/dist/quill.core.css";\nimport "quill/dist/quill.snow.css";\nimport "quill/dist/quill.bubble.css";\n\nexport default {\n  props: {\n    /* 编辑器的内容 */\n    value: {\n      type: String,\n    },\n    /* 图片大小 */\n    maxSize: {\n      type: Number,\n      default: 4000, //kb\n    },\n  },\n  components: { quillEditor },\n  data() {\n    return {\n      content: this.value,\n      uploadImgUrl: "",\n      editorOption: {\n        placeholder: "",\n        theme: "snow", // or \'bubble\'\n        placeholder: "请输入内容",\n        modules: {\n          toolbar: {\n            container: toolbarOptions,\n            handlers: {\n              image: function (value) {\n                if (value) {\n                  // 触发input框选择图片文件\n                  document.querySelector(".quill-img input").click();\n                } else {\n                  this.quill.format("image", false);\n                }\n              },\n            },\n          },\n        },\n      },\n      uploadImgUrl: process.env.VUE_APP_BASE_API + "/common/upload", // 上传的图片服务器地址（这个地方注意）\n      headers: {\n        Authorization: "Bearer " + getToken(),（这个地方注意）\n      },\n    };\n  },\n  watch: {\n    value: function () {\n      this.content = this.value;\n    },\n  },\n  methods: {\n    onEditorBlur() {\n      //失去焦点事件\n    },\n    onEditorFocus() {\n      //获得焦点事件\n    },\n    onEditorChange() {\n      //内容改变事件\n      this.$emit("input", this.content);\n    },\n\n    // 富文本图片上传前\n    quillImgBefore(file) {\n      let fileType = file.type;\n      if (fileType === "image/jpeg" || fileType === "image/png") {\n        return true;\n      } else {\n        this.$message.error("请插入图片类型文件(jpg/jpeg/png)");\n        return false;\n      }\n    },\n\n    quillImgSuccess(res, file) {\n      // res为图片服务器返回的数据\n      // 获取富文本组件实例\n      let quill = this.$refs.quillEditor.quill;\n      // 如果上传成功\n      if (res.code == 200) {\n        // 获取光标所在位置\n        let length = quill.getSelection().index;\n        // 插入图片  res.url为服务器返回的图片地址\n        quill.insertEmbed(length, "image", res.url);\n        // 调整光标到最后\n        quill.setSelection(length + 1);\n      } else {\n        this.$message.error("图片插入失败");\n      }\n    },\n    // 富文本图片上传失败\n    uploadError() {\n      // loading动画消失\n      this.$message.error("图片插入失败");\n    },\n  },\n};\n<\/script> \n\n<style>\n.editor {\n  line-height: normal !important;\n  height: 692px;\n}\n.quill-img {\n  display: none;\n}\n.ql-snow .ql-tooltip[data-mode="link"]::before {\n  content: "请输入链接地址:";\n}\n.ql-snow .ql-tooltip.ql-editing a.ql-action::after {\n  border-right: 0px;\n  content: "保存";\n  padding-right: 0px;\n}\n\n.ql-snow .ql-tooltip[data-mode="video"]::before {\n  content: "请输入视频地址:";\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item::before {\n  content: "14px";\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value="small"]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value="small"]::before {\n  content: "10px";\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value="large"]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value="large"]::before {\n  content: "18px";\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value="huge"]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value="huge"]::before {\n  content: "32px";\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item::before {\n  content: "文本";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="1"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before {\n  content: "标题1";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="2"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before {\n  content: "标题2";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="3"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before {\n  content: "标题3";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="4"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before {\n  content: "标题4";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="5"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before {\n  content: "标题5";\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="6"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before {\n  content: "标题6";\n}\n\n.ql-snow .ql-picker.ql-font .ql-picker-label::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item::before {\n  content: "标准字体";\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="serif"]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="serif"]::before {\n  content: "衬线字体";\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="monospace"]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="monospace"]::before {\n  content: "等宽字体";\n}\n</style>\n')])])]),n("h2",{attrs:{id:"组件强制刷新技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件强制刷新技巧"}},[e._v("#")]),e._v(" 组件强制刷新技巧")]),e._v(" "),n("blockquote",[n("p",[e._v("在实际开发过程中经常会遇到动态取值之后vue组件不能刷新的问题，解决办法就是利用v-if，改变状态，强制刷新")])]),e._v(" "),n("ul",[n("li",[e._v('在要刷新的组件上定义v-if="hackReset"')])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('v-if="hackReset"\n')])])]),n("ul",[n("li",[e._v("data里定义变量")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("hackReset: true\n")])])]),n("ul",[n("li",[e._v("在需要刷新的位置加上刷新代码")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("this.hackReset = false;\nthis.$nextTick(() => {\n\tthis.hackReset = true;\n});\n")])])]),n("h2",{attrs:{id:"导入导出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导入导出"}},[e._v("#")]),e._v(" 导入导出")]),e._v(" "),n("ul",[n("li",[e._v("导出")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<el-button type="primary" @click="btnExport">导出</el-button>\n\nbtnExport() {\n      let queryParam = {};\n      api.exportData(queryParam, response => {\n        if (response.data.statusMessage === "-1") {\n          this.$message({\n            showClose: true,\n            message: "导出失败",\n            type: "error"\n          });\n          return;\n        }\n        this.doDownload(response.request.responseURL);\n        this.$message({\n          showClose: true,\n          message: "导出成功！",\n          type: "success"\n        });\n      });\n    },\n    doDownload(src) {\n      var a = document.createElement("a");\n      a.href = src;\n      document.body.appendChild(a);\n      a.click();\n    }\n')])])]),n("ul",[n("li",[e._v("导入")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<el-button type="primary" @click="btnImport">导入</el-button>\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("btnImport() {\n\tthis.importVisible = true\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<template>\n  <div>\n    <td-dialog\n      :visible="importVisible"\n      v-dialogDrag\n      :title="IMPORT"\n      width="25%"\n      :before-close="importDialogClose"\n    >\n      <el-row>\n        <el-col :span="16" style="margin-top:10px;margin-bottom:5px;">\n          <td-button type="primary" @click="chooseFile">{{SELECTFILE}}</td-button>\n          <td-button @click="upLoadFile">{{UPLOADFILE}}</td-button>\n        </el-col>\n        <el-col style="margin-bottom:30px;">\n          <span style="font-size:10px;">{{ONLIEXCEL}}</span>\n        </el-col>\n        <el-col style="margin-bottom:30px;text-align:center">\n          <span style="font-size:14px; color:#666">{{uploadFileName}}</span>\n          <td-button\n            @click="removeFile"\n            type="text"\n            size="small"\n            v-show="uploadFileName != \'\'"\n            style="font-size:14px; color:#000; padding-left: 30px"\n          >{{DELFILE}}</td-button>\n          <input type="file" id="btn_file" style="display:none" accept=".xls" ref="btnFile" />\n        </el-col>\n      </el-row>\n      <span slot="footer" class="dialog-footer">\n        <td-button @click="importTemplate">{{IMPORTMODELDOWNLOAD}}</td-button>\n        <td-button @click="importCancel">{{CANCEL}}</td-button>\n      </span>\n    </td-dialog>\n  </div>\n</template>\n\n<script>\nimport api from "@/assets/api";\nexport default {\n  props: {\n    importVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      IMPORT: this.$t("sightWordImportDialog.IMPORT"),\n      SELECTFILE: this.$t("sightWordImportDialog.SELECTFILE"),\n      UPLOADFILE: this.$t("sightWordImportDialog.UPLOADFILE"),\n      ONLIEXCEL: this.$t("sightWordImportDialog.ONLIEXCEL"),\n      DELFILE: this.$t("sightWordImportDialog.DELFILE"),\n      IMPORTMODELDOWNLOAD: this.$t("sightWordImportDialog.IMPORTMODELDOWNLOAD"),\n      CANCEL: this.$t("sightWordImportDialog.CANCEL"),\n      uploadFileName: ""\n    };\n  },\n  methods: {\n    importDialogClose() {\n      this.$emit("importDialogClose");\n    },\n    importTemplate() {\n      let aTag = document.createElement("a");\n      aTag.href =\n        "http://192.168.96.44:7000/mclz/filemanagement/sightWordTemplate.xls";\n      document.body.appendChild(aTag);\n      aTag.click();\n    },\n    chooseFile() {\n      let _this = this;\n      let btnImport = this.$refs.btnFile;\n      btnImport.click();\n      btnImport.onchange = function() {\n        _this.importData(btnImport.files);\n      };\n    },\n    importData(files) {\n      if (files.length > 0) {\n        let fileName = files[files.length - 1].name;\n        if (fileName.indexOf(".xls", fileName.length - ".xls".length) === -1) {\n          this.$message.error({\n            showClose: true,\n            message: $t("sightWordImportDialog.EILEMESSAGEERROR")\n          });\n          this.$refs.btnFile.value = "";\n          return;\n        } else {\n          if (files[files.length - 1].size / 1024 / 1024 > 300) {\n            this.$message.error({\n              showClose: true,\n              message: $t("sightWordImportDialog.FILESIZELESS300M")\n            });\n            this.$refs.btnFile.value = "";\n            return;\n          }\n          this.uploadFileName = fileName;\n        }\n      }\n    },\n    upLoadFile() {\n      let files = this.$refs.btnFile.files;\n      if (files.length === 0) {\n        this.$message.error({\n          showClose: true,\n          message: $t("sightWordImportDialog.FILESIZELESS300M")\n        });\n        this.$refs.btnFile.value = "";\n        return;\n      }\n      let header = {};\n      let params = new FormData();\n      params.append("file", this.$refs.btnFile.files[files.length - 1]);\n      api.importData(params, response => {\n        if (response.data.statusCode === "API-COMMON-INF-OK") {\n          this.$message({\n            showClose: true,\n            message: $t("sightWordImportDialog.FILESIZELESS300M"),\n            type: "success"\n          });\n          this.importDialogClose();\n        } else {\n          this.$message({\n            showClose: true,\n            message: $t("sightWordImportDialog.FILESIZELESS300M"),\n            type: "error"\n          });\n        }\n        this.$refs.btnFile.value = "";\n        this.uploadFileName = "";\n      });\n    },\n    removeFile() {\n      this.$refs.btnFile.value = "";\n      this.uploadFileName = "";\n    },\n    importCancel() {\n      this.importDialogClose();\n    }\n  }\n};\n<\/script>\n\n<style>\n</style>\n')])])]),n("h2",{attrs:{id:"匹配拼接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#匹配拼接"}},[e._v("#")]),e._v(" 匹配拼接")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('for (var i = 0; i < _this.patrolPeople.length; i++) {\n          if (_this.patrolPeople[i].patrolPName.match(_this.patrolUserName)) {\n            userIdTempArray.push(_this.patrolPeople[i].patrolPId);\n          }\n        }\n        userId = userIdTempArray.join(",");\n        if (userId === "") {\n          _this.schedulingList = [];\n          _this.total = 0;\n          return;\n        }\n')])])]),n("h2",{attrs:{id:"table中列值动态赋样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table中列值动态赋样式"}},[e._v("#")]),e._v(" table中列值动态赋样式")]),e._v(" "),n("ul",[n("li",[e._v("根据每一列alert0show,alert1show,alert3show的值来确定显示哪个图标")]),e._v(" "),n("li",[e._v("根据每一列patrolAlarm的值来设定文字的样式  （动态赋class,class里定义样式）")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(' <el-table-column prop="patrolAlarm"  width="148" align="center">\n     <template slot-scope="scope">\n     <i class="el-icon-success" v-show="scope.row.alert0show" style="color:#7E9913"></i>\n     <i class="el-icon-warning" v-show="scope.row.alert1show" style="color:#FA4F4F"></i>\n     <i class="el-icon-time" v-show="scope.row.alert3show" style="color:#7E9913"></i>&nbsp;\n     <span\n     :class="((scope.row.patrolAlarm === \'1\') || (scope.row.patrolAlarm === \'4\') || (scope.row.patrolAlarm === \'5\')) ? \'redColor\':\'greenColor\'"\n     >{{scope.row.sAlertType}}</span>\n     </template>\n </el-table-column>\n')])])]),n("h2",{attrs:{id:"js-数组对象-以某一对象-排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-数组对象-以某一对象-排序"}},[e._v("#")]),e._v(" js 数组对象 以某一对象 排序")]),e._v(" "),n("p",[e._v("this.tableData.sort(this.compare('formateDate'))\ncompare(property){"),n("br"),e._v("\nreturn function(a,b){\nvar value1 = a[property];\nvar value2 = b[property];\nreturn value2 - value1;\n}\n}")])])}),[],!1,null,null,null);t.default=l.exports}}]);